$namespace=Nett.Parser

using System.Text;

COMPILER Toml

	public readonly TomlTable parsed = new TomlTable();
	private readonly StringBuilder sb = new StringBuilder(32);

CHARACTERS
	digit = '0'..'9'.
	hexDigit = digit + "ABCDEFabcdef".
	letter = 'a'..'z' + 'A'..'Z'.
	plus = '+'.
	minus = '-'.
	eol = '\n'.
	singleLineStringChar = ANY - '"' - '\\' - '\r' - '\n'.
	stringChar = ANY - '"' - '\\'.
	lstringChar = ANY - '\''.
	ac = ANY.
TOKENS
	number = digit{digit}.
	sign = plus | minus.
	identifier = letter{digit|letter}.
	string =	"\"" { singleLineStringChar | "\\\'" | "\\\"" | "\\\\" | "\\0" | "\\a" | "\\b" | "\\f" | "\\n" | "\\r" | "\\t" | "\\v" 
											| "\\x" hexDigit [hexDigit] [hexDigit] [hexDigit]
											| "\\u" hexDigit hexDigit hexDigit hexDigit
											| "\\U" hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit
				} "\"".
	mstring =	"\"\"\"" { stringChar		| "\\\'" | "\\\"" | "\\\\" | "\\0" | "\\a" | "\\b" | "\\f" | "\\n" | "\\r" | "\\t" | "\\v" | "\\\r" | "\\\n"
											| "\\x" hexDigit [hexDigit] [hexDigit] [hexDigit]
											| "\\u" hexDigit hexDigit hexDigit hexDigit
											| "\\U" hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit
				} "\"\"\"".
	lstring = '\'' {lstringChar} '\''.
	mlstring = "\'\'\'" {ac} "\'\'\'".

COMMENTS FROM "#" TO eol

IGNORE '\r' + '\n'

PRODUCTIONS
	Toml 													(. string key; object val; .)
		= Key<out key> '=' Value<out val>					(. parsed.Add(key, val); .).
	Key<out string val> 
		= identifier										(. val = t.val; .).
	Value<out object val>									(. long iv; val = null; .)
		= IntVal<out iv>									(. val = iv; .)
		| string											(. val = ParseStringVal(t.val); .)
		| mstring											(. val = ParseMStringVal(t.val); .)
		| lstring											(. val = ParseLStringVal(t.val); .)
		| mlstring											(. val = ParseMLStringVal(t.val); .).
	IntVal<out long val>									(. bool neg = false; this.sb.Clear(); .)
		 = [sign]											(. if(t.val == "-") neg = true; .)
		   number											(. sb.Append(t.val); .)
		   {
				'_'number									(. sb.Append(t.val); .)
		   }												(. val = this.ParseIntVal(sb, neg); .).
END Toml.
